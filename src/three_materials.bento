/---------------------
 -- three_materials.bento
 --
 -- Materials for three.bento
 --
 -- Copyright (c) 2012 by Michael St. Hippolyte
 --
 --/
 
site three [=


    /---- material base class ----/
        
    three_object material [=
        three_class = "Material"
        
        float opacity [?]
        boolean transparent [?]
        blending [?]
        boolean depth_test [?]
        boolean depth_write [?]
        boolean polygon_offset [?]
        polygon_offset_factor [?]        
        polygon_offset_units [?]        
        alpha_test [?]
        boolean overdraw [?]
           
        options{} = { with (opacity)        [= "opacity": opacity =],
                      with (transparent)    [= "transparent": transparent =],
                      with (blending)       [= "blending": blending =],
                      with (depth_test)     [= "depthTest": depth_test =],
                      with (depth_write)    [= "depthWrite": depth_write =],
                      with (polygon_offset) [= "polygonOffset": polygon_offset =],
                      with (offset_factor)  [= "offsetFactor": offset_factor =],
                      with (offset_units)   [= "offsetUnits": offset_units =],
                      with (alpha_test)     [= "alphaTest": alpha_test =],
                      with (overdraw)       [= "overdraw": overdraw =]
                    }
    =]
    
    /---- materials ----/
    
    dynamic material basic_material [=
        three_class = "MeshBasicMaterial"
        
        color [?]
        map [?]
        light_map [?]
        env_map [?]
        combine [?]
        reflectivity [?]
        refraction_ratio [?]
        boolean fog [?]
        shading [?]
        boolean wireframe [?]
        line_width [?]
        line_cap [?]
        line_join [?]
        boolean vertex_colors [?]
        boolean skinning [?]
        boolean morph_targets [?]
        
        undecorated texture_map(x) [=
            x;
        =]
    
        options{} = { with (color)            [= "color": color =],
                      if   (map)              [= "map": texture_map(map) =],
                      if   (light_map)        [= "lightMap": light_map =],
                      if   (env_map)          [= "envMap": env_map =],
                      with (combine)          [= "combine": combine =],
                      with (reflectivity)     [= "reflectivity": reflectivity =],
                      with (refraction_ratio) [= "refractionRatio": refraction_ratio =],
                      with (fog)              [= "fog": fog =],
                      with (shading)          [= "shading": shading =],
                      with (wireframe)        [= "wireframe": wireframe =],
                      with (line_width)       [= "wireframeLinewidth": line_width =],
                      with (line_cap)         [= "wireframeLinecap": line_cap =],
                      with (line_join)        [= "wireframeLinejoin": line_join =],
                      with (vertex_colors)    [= "vertexColors": vertex_colors =],
                      with (skinning)         [= "skinning": skinning =],
                      with (morph_targets)    [= "morphTargets": morph_targets =] 
                    }                     
    =]

=]
